;; Files vars
(defpoll FREE :interval "5s" `df -h / | awk '{print $4}' | tail -n 1 | sed 's/G/GB/'`)

(defpoll TIME :interval "1s" `date +"%D %H:%M:%S"`)

;; -- begin music setup --
(defpoll MUSIC_STATUS :interval "1s" `playerctl status`)
(defpoll MUSIC_LINE :interval "1s" `/home/placidfireball/.config/eww/scripts/music_info --line`)

;; -- slider wrapper --
(defwidget metric [label value onchange]
  (box
    :orientation "h"
    :class "metric"
    :space-evenly false

    (box :class "label" label)
    (scale
      :min 0
      :max 100
      :active {onchange != ""}
      :value value
      :onchange onchange
    )
  )
)

(defwidget music []
  (box
    :class "music"
    :orientation "horizontal"
    :halign "center"

    {substring("${MUSIC_LINE}", 0, 50)}
  )
)

(defwidget music-controls []
  (box
    :orientation "h"
    :halign "start"

    (button :class 'music_button' :onclick 'playerctl previous' '‚èÆ') 
    (button :class 'music_button' :onclick {MUSIC_STATUS == 'Playing' ? 'playerctl pause' : 'playerctl play'} {MUSIC_STATUS == 'Playing' ? '‚è∏' : '‚èµ'})
    (button :class 'music_button' :onclick 'playerctl next' '‚è≠')
  )
)
;; -- end music setup --

;; -- workspaces --
(deflisten WORKSPACE_YUCK "/home/placidfireball/.config/eww/scripts/workspaces.py -e")

(defwidget workspaces []
  (literal :content WORKSPACE_YUCK)
)
;; -- end workspaces --

;; -- sliders --
(defpoll volume :interval "1s" `pamixer --get-volume`)
(defwidget volume []
  (box
    :orientation "h"

    (metric
      :label "üîä"
      :value volume
      :onchange "pamixer --set-volume {}; ~/.config/hypr/scripts/volume --updated"
    )
  )
)

(defwidget ram-usage []
  (metric 
    :label "ÔÉâ "
    :value {EWW_RAM.used_mem_perc}
    :onchange ""
  )
)

(defwidget cpu-usage []
  (metric
    :label "Ôãõ "
    :value {EWW_CPU.avg}
    :onchange ""
  )
)
;; -- end sliders --

(defwidget left_side []
  (box
    :class "container"
    :orientation "h"
    :halign "start"
    :space-evenly false

    (workspaces)
  )
)

(defwidget middle []
  (box
    :class "container"
    :orientation: "h"
    :halign "center"
    :space-evenly false

    (music)
    "  "
    (music-controls)
  )
)

(defwidget right_side []
  (box
    :orientation "horizontal"
    :halign "end"
    :space-evenly false

    (box
      :class "container"
      :orientation "horizontal"
      :space-evenly false

      (cpu-usage)
      (ram-usage)
      (volume)
      TIME
    )
    "    "
    (box
      :class "container"
      :orientation "h"
      (button :onclick "" "‚â°")
    )
  )
)

(defwidget bar []
  (centerbox
    :class "main_bar"
    :orientation "horizontal"

    (left_side)
    (middle)
    (right_side)
  )
)

(defwindow topbar
  :monitor 0
  :geometry (geometry
    :x       "0px"
    :y       "10px"
    :width   "2520px"
    :height  "20px"
    :anchor  "top center"
  )
  :stacking "fg"
  :exclusive true
  :wm-ignore false

  (bar)
)
